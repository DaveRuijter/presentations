{
	"name": "bronze_openweather",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"run_path = '2022/03/04/20_00_00'\r\n",
					"run_id = ''\r\n",
					"run_timestamp = '2022-03-04-20T20:00:00'"
				],
				"execution_count": 24
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"try:\r\n",
					"    mssparkutils.fs.unmount(\"/mnt_defaultfs\")\r\n",
					"except:\r\n",
					"  print(\"An exception occurred while unmounting, mount not existing?\")\r\n",
					"\r\n",
					"mssparkutils.fs.mount( \r\n",
					"    \"abfss://defaultfs@yourstorageaccounthere.dfs.core.windows.net\", \r\n",
					"    \"/mnt_defaultfs\", \r\n",
					"    {\"linkedService\":\"yourIRhere\"} \r\n",
					")"
				],
				"execution_count": 25
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"jobId = mssparkutils.env.getJobId()\r\n",
					"print(jobId)"
				],
				"execution_count": 26
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"CURRENT_WEATHER_BRONZE_FILE_PATH = f\"/synfs/{jobId}/mnt_defaultfs/bronze/openweather/{run_path}/current/\"\r\n",
					"print(CURRENT_WEATHER_BRONZE_FILE_PATH)\r\n",
					"FORECAST_WEATHER_BRONZE_FILE_PATH = f\"/synfs/{jobId}/mnt_defaultfs/bronze/openweather/{run_path}/forecast/\"\r\n",
					"print(FORECAST_WEATHER_BRONZE_FILE_PATH)\r\n",
					"API_KEY=\"use_your_own_key\""
				],
				"execution_count": 27
			},
			{
				"cell_type": "code",
				"source": [
					"import requests\n",
					"import pandas as pd"
				],
				"execution_count": 28
			},
			{
				"cell_type": "markdown",
				"source": [
					"### Request weather info using city name"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"City_API_endpoint = \"http://api.openweathermap.org/data/2.5/weather?q=\"\n",
					"City = \"London\"\n",
					"Country = \",UK,\"\n",
					"join_key = \"&appid=\" + API_KEY\n",
					"units = \"&units=metric\"\n",
					"current_city_weather = City_API_endpoint + City + Country + join_key + units\n",
					"print(current_city_weather)"
				],
				"execution_count": 29
			},
			{
				"cell_type": "code",
				"source": [
					"json_data = requests.get(current_city_weather).json()\r\n",
					"#print(json_data)"
				],
				"execution_count": 30
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print(CURRENT_WEATHER_BRONZE_FILE_PATH)\r\n",
					"mssparkutils.fs.mkdirs(CURRENT_WEATHER_BRONZE_FILE_PATH)"
				],
				"execution_count": 31
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import json\r\n",
					"with open(f\"{CURRENT_WEATHER_BRONZE_FILE_PATH}json_data.json\", 'w') as outfile:\r\n",
					"    json.dump(json_data, outfile)"
				],
				"execution_count": 32
			},
			{
				"cell_type": "markdown",
				"source": [
					"# Forecast"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"City_API_endpoint = \"http://api.openweathermap.org/data/2.5/forecast?q=\"\n",
					"City = \"London\"\n",
					"Country = \",UK,\"\n",
					"join_key = \"&appid=\" + API_KEY\n",
					"units = \"&units=metric\"\n",
					"city_forecast = City_API_endpoint + City + Country + join_key + units\n",
					"print(city_forecast)"
				],
				"execution_count": 33
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": true
					}
				},
				"source": [
					"forecast_json_data = requests.get(city_forecast).json()\r\n",
					"\r\n",
					"import json\r\n",
					"with open(f\"{FORECAST_WEATHER_BRONZE_FILE_PATH}json_data.json\", 'w') as outfile:\r\n",
					"    json.dump(forecast_json_data, outfile)"
				],
				"execution_count": 34
			}
		]
	}
}